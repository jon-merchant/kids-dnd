<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,spUtil) {
  /* widget controller */
  var c = this;
	
	
	
	//This should update if the record changes in real time
	spUtil.recordWatch($scope, "x_0478_kids_dungeo_character_card", "active=true", function(name, data) {
		spUtil.update($scope);
	});
	
	$scope.getCharacterImg = function(charType) {
		//console.log(charType);
		//need to grab the image and display it.
		c.data.show_image = charType;
		
		c.server.update().then(function(response){
			c.data.show_image = undefined;
			
		});
	}
	
	$scope.generateName = function() {
		c.data.get_name = true;
		c.server.update().then(function(response){
			c.data.get_name = undefined;
			
			$scope.character.name = response.character_name;
			
		});
	}
	
	$scope.generateAttrib = function(attrib,charClass) {
		c.data.generateAttrib = true;
		c.data.thisAttrib = attrib;
		c.data.thisAttribClass = charClass;
		c.server.update().then(function(response){
			c.data.generateAttrib = undefined;
			c.data.thisAttrib = undefined;
			c.data.thisAttribClass = undefined;
			$scope.character.strength = response.character_fighter_roll;
			$scope.character.dexterity = response.character_ranged_roll;
			$scope.character.wisdom = response.character_magic_roll;
			//$scope.character[attrib] = response.character[attrib];
		})
	}
}

]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>kidds-character-picker</id>
        <internal>false</internal>
        <link/>
        <name>Character Picker</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	function checkUndefinded(vari) {
		if (typeof vari != 'undefined') {
			vari = "";
		}
		
		return vari;
	}
	
	function add(a, b) {
    return a + b;
	}
	function rollDice(sides,rolls,mods) {
		var resp = {};
		var d = [];
		var sum = 0;
		var avg = 0;
		if (typeof mods !== 'undefined') {
			//the variable is defined
			mods = 0;
		}
		for(i=0;i<rolls;i++) {
			d[i] = parseInt(Math.floor(Math.random() * sides) + 1);
			//console.log(d[i]);
			d[i] = d[i] + mods;
			sum += d[i];

		}
		//avg = Math.floor(sum / 3);

		//console.log(d);
		var dd = d;
		dd.sort(function(a, b){return b-a});
		dd.pop();
		//console.log(dd);
		var sum2 = dd.reduce(add, 0);
		//console.log(sum2);
		avg = Math.floor(sum / dd.length);

		//console.log(sum);
		//console.log(avg);

		resp.oRoll = d;
		resp.roll = dd;
		resp.sum = sum2;
		resp.avg = avg;

		return resp;
	}

//var roll = rollDice(6,4);
//console.log(roll);
	
	function checkAttrib(attrib,charType) {
		var mods = {};
		var lowerChar = charType.toLowerCase();
		
		if (lowerChar == "magic" && attrib == "wisdom") {
			mods.magic = parseInt(10);
		}
		if (lowerChar == "fighter" && attrib == "strength") {
			mods.fighter = parseInt(10);
		}
		if (lowerChar == "ranged" && attrib == "dexterity"){
			mods.ranged = parseInt(10);
		}
				
		return mods
				
	}
	
	function getCharName() {
		
		var names = [
    "Ailo","Aerithllorgue","Yasursudru","Tyala","Nirithstidru","Ariria","Idue","Seori","Pharin","Slitherap","Aesty","Phiadainu","Eully","Tyaidaisup","Sirithnu","Athenurgue","Eudain","Rially","Aelophos","Riasurm","Pheusrisuir","Yastynup",
    "Heoral","Faesurphos","Pheolae","Tyaistyphos","Istyn","Sailanulis","Pheudueru","Aeral","Sadaphos","Yadain","Yarithsurin","Iasrillodil"
    ];
  
		var fName = Math.floor((Math.random() * names.length) + 1);
		var lName = Math.floor((Math.random() * names.length) + 1);
		
		return names[fName]+" "+names[lName];
	}
	
	function getCharImage(charType) {
		var img = "http://placehold.it/184x284?text=N/A";
		//https://dev16833.service-now.com/80723a2b6f2e2200432530767b3ee438.iix
		var gr = new GlideRecord('x_0478_kids_dungeo_character_image');
		gr.addEncodedQuery('character_class='+charType+'^active=true');
		gr.orderByDesc('sys_created_on');
		gr.setLimit(1);
		gr.query();
		if (gr.next()) {
			//$sp.log(gr.sys_id);
			var gr2 = new GlideRecord('sys_attachment');
			gr2.addEncodedQuery('table_sys_id='+gr.sys_id+'^table_nameLIKEZZ_YYx_0478_kids_dungeo_character_image');
			gr2.query();
			if (gr2.next()) {
				img = "/"+gr2.sys_id+".iix";
			}
			
		}
		
		return img;
	}
	
	
	data.char_class = [];
	//get the different classes v1 = 3
	
	var gr = new GlideRecord('sys_choice');
	gr.addEncodedQuery('name=x_0478_kids_dungeo_character_card^element=u_choice_1^inactive=false');
	gr.orderBy('name');
	gr.query();
	while(gr.next()) {
		data.char_class.push({'value':gr.getValue('sys_id'),'label':gr.getValue('label')});
	}
	
	data.title = "Character Class";
	
	
	//talk back
	if (input && input.show_image) {
		$sp.log(input.show_image.label);
		//now we need to grab the images
		data.char_image = getCharImage(input.show_image.value);
	}
	
	if (input && input.get_name == true) {
		//$sp.log(input.get_name);
		var cName = getCharName();
		//$sp.log(cName);
		data.character_name = cName;
	} 
	
	if (input && input.generateAttrib) {
		//value should be one of the attribs
		$sp.log(input.thisAttrib);
		$sp.log(input.thisAttribClass);
		
		//need to check which mod to add too
		var roll;
		if (input.thisAttrib == 'wisdom') {
			if (input.thisAttribClass == 'Magic') {
				//magic gets the mod
				roll = rollDice(6,4,10);
			} else {
				roll = rollDice(6,4);
			}
			data.character_magic_roll = roll.sum;			
		}
		if (input.thisAttrib == 'strength') {
			if (input.thisAttribClass == 'Fighter') {
				roll = rollDice(6,4,10);
			} else {
				$sp.log("should hit");
				roll = rollDice(6,4);
				$sp.log(roll.sum);
			}
			data.character_fighter_roll = roll.sum;
		}
		if (input.thisAttrib == 'dexterity') {
			if (input.thisAttribClass == 'Ranged') {
				roll = rollDice(6,4,10);
			} else {
				roll = rollDice(6,4);
			}
			data.character_ranged_roll = roll.sum;
		}
		
	}
	

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-10-24 23:50:54</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>780a8a6f6fea2200432530767b3ee41e</sys_id>
        <sys_mod_count>226</sys_mod_count>
        <sys_name>Character Picker</sys_name>
        <sys_package display_value="Kids Dungeons &amp; Dragons" source="x_0478_kids_dungeo">7901202f6f2a2200432530767b3ee440</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Kids Dungeons &amp; Dragons">7901202f6f2a2200432530767b3ee440</sys_scope>
        <sys_update_name>sp_widget_780a8a6f6fea2200432530767b3ee41e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-10-30 03:55:40</sys_updated_on>
        <template><![CDATA[<div>
<!-- your widget template -->
  <form name="character">
    <div class="form-group row">
    	<label>Character Name:</label>
      <input type="text" ng-model="character.name"  readonly="readonly" class="form-control"/>
      <div style="padding-top: 10px;"><button type="button" class="btn btn-info" ng-click="generateName()">Generate</button></div>  
      
    </div>
    <div class="form-group row">
      <label>Character Class:</label>
      <select ng-model="character.class" 
        ng-options="option.label for option in c.data.char_class track by option.value" 
        ng-change='getCharacterImg(character.class)' class="form-control">
        <option style="display:none" value="">Select A Class</option>
      </select>
      <div style="padding-top: 10px;">
        <fieldset class="form-inline">
          <img ng-show="c.data.char_image !== undefined" src="{{c.data.char_image}}" style="float:left; margin-right: 10px;margin-bottom: 20px;"/>
          <p ng-show="c.data.char_image !== undefined">ATTRIBUTES<p>
          <div ng-show="c.data.char_image !== undefined" style="padding-top: 10px;" ><label class="control-label">Strength:</label> <input type="text" ng-model="character.strength" readonly="readonly" class="form-control" style="width: 50px;"/><button type="button" class="btn btn-info" ng-click="generateAttrib('strength',character.class.label)">Roll</button></div>
          <div ng-show="c.data.char_image !== undefined" style="padding-top: 10px;" ><label class="control-label">Dexterity:</label> <input type="text" ng-model="character.dexerity" readonly="readonly" class="form-control" style="width: 50px;"/><button type="button" class="btn btn-info" ng-click="generateAttrib('dexterity',character.class.label)">Roll</button></div>
          <div ng-show="c.data.char_image !== undefined" style="padding-top: 10px;" ><label class="control-label">Wisdom:</label> <input type="text" ng-model="character.wisdom" readonly="readonly" class="form-control" style="width: 50px;"/><button type="button" class="btn btn-info" ng-click="generateAttrib('wisdom',character.class.label)">Roll</button></div>
        </fieldset>
      </div>
      
    </div>
  </form>
</div>]]></template>
    </sp_widget>
</record_update>
